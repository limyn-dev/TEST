Attribute VB_Name = "APIMenu"

'============================================================================='
'                 API pour la gestion des menus                    '
'-----------------------------------------------------------------------------'
' Création                                                                    '
' Date         : 04.03.02                                                     '
' Hauteur      : Y.Delay                                                      '
' Documentation: http://www.vbapi.com/ref/msgc.html                           '
'-----------------------------------------------------------------------------'
'                                                                             '
'============================================================================='



'------------------------------------------------------------------------------
' SC_CLOSE       -> Close the window.
' SC_CONTEXTHELP -> Display a context-sensitive help window.
' SC_MAXIMIZE    -> Maximize the window.
' SC_MINIMIZE    -> Minimize the window.
' SC_MOVE        -> Move the window.
' SC_RESTORE     -> Restore the window.
' SC_SIZE        -> Size the window.
'==============================================================================
Const SC_CLOSE = &HF060
Const SC_CONTEXTHELP = &HF180
Const SC_MAXIMIZE = &HF030
Const SC_MINIMIZE = &HF020
Const SC_MOVE = &HF010
Const SC_RESTORE = &HF120
Const SC_SIZE = &HF000

'------------------------------------------------------------------------------
' WM_COMMAND: A window receives the WM_COMMAND message when the user selects an
'             item in one of the window's menus. This includes any popup menus
'             which the window owns. Upon receiving this message, the window
'             should perform whatever task or operation the menu item was meant
'             to perform.
' Param     : wParam -> The high-order word is the notification code of the
'                       message: 0 means the message was generated by selecting
'                       a menu item, whereas 1 means the message was generated
'                       by a keyboard accelerator. The low-order word contains
'                       the identifier of the menu item that the user selected.
'                       The LOWORD and HIWORD macros can extract these two values.
'             lParam -> A handle to the control that sent this message, if any.
'                       If no control sent the message, this is 0.
' Return    : The WM_COMMAND message should always return 0.
'==============================================================================
Const WM_COMMAND = &H111

'------------------------------------------------------------------------------
' WM_INITMENU: A window receives the WM_INITMENU message before one of its menus
'              is displayed. This menu could be either the "regular" menu or the
'              window's system menu. Upon receiving this message, the window
'              should prepare the menu for display. This normally includes making
'              sure any items that should be checked are checked, graying out
'              certain items, etc. A window only receives WM_INITMENU when the
'              user begins looking at a menu; it does not receive the message
'              multiple times as the user looks into submenus.
' Param      : wParam -> A handle to the menu which will soon be displayed.
'              lParam -> Not used.
' Return     : The WM_INITMENU message should always return 0.
'==============================================================================
Const WM_INITMENU = &H116

'------------------------------------------------------------------------------
' WM_SYSCOMMAND: A window receives the WM_SYSCOMMAND message when either the user
'                selects an item from its system menu or the user presses the
'                restore, maximize, minimize, or close button on its title bar.
'                Typically, a program should let the default window procedure
'                process this command, unless the program needs to respond to an
'                item added by the program to the window's system menu.
' Param        : wParam -> The unique menu item identifier of the selected item.
'                          This could be one of the following flags, if the user
'                          selected an item that is by default on the system menu.
'                          When checking for these flags, first perform a bitwise
'                          And &HFFF0 on wParam before checking its value. This
'                          is necessary because the lowest four bits are used
'                          internally by the system and do not affect the flag
'                          itself. Of course, if your program added its own items
'                          to the system menu, then wParam will be that item's
'                          identifier and not one of the following values.
'                          SC_CLOSE/SC_CONTEXTHELP/SC_MAXIMIZE/SC_MINIMIZE/SC_MOVE
'                          /SC_RESTORE/SC_SIZE
'                lParam -> If the system menu item was selected using the mouse,
'                          this contains the coordinates of the mouse cursor.
'                          The x-coordinate is stored in the low-order word, and
'                          the y-coordinate is stored in the high-order word. The
'                          LOWORD and HIWORD macros can be used to extract the
'                          coordinates.
' Return       : The WM_SYSCOMMAND message should always return 0.
'==============================================================================
Const WM_SYSCOMMAND = &H112
